[{"/home/jake/proj/jake.cafe/portfolio2/components/Home/data.ts":"1","/home/jake/proj/jake.cafe/portfolio2/components/Home/index.tsx":"2","/home/jake/proj/jake.cafe/portfolio2/components/Home/transform.ts":"3","/home/jake/proj/jake.cafe/portfolio2/externals.d.ts":"4","/home/jake/proj/jake.cafe/portfolio2/hooks/useMousePosition.ts":"5","/home/jake/proj/jake.cafe/portfolio2/hooks/useWindowDimensions.ts":"6","/home/jake/proj/jake.cafe/portfolio2/next.config.js":"7","/home/jake/proj/jake.cafe/portfolio2/pages/index.tsx":"8"},{"size":1328,"mtime":1581913030105,"results":"9","hashOfConfig":"10"},{"size":1533,"mtime":1581913030105,"results":"11","hashOfConfig":"10"},{"size":473,"mtime":1581913030105,"results":"12","hashOfConfig":"10"},{"size":74,"mtime":1581913030105,"results":"13","hashOfConfig":"10"},{"size":637,"mtime":1581913030105,"results":"14","hashOfConfig":"10"},{"size":678,"mtime":1581913030105,"results":"15","hashOfConfig":"10"},{"size":156,"mtime":1581913030105,"results":"16","hashOfConfig":"10"},{"size":148,"mtime":1581913030105,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jogv9a",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jake/proj/jake.cafe/portfolio2/components/Home/data.ts",[],"/home/jake/proj/jake.cafe/portfolio2/components/Home/index.tsx",[],"/home/jake/proj/jake.cafe/portfolio2/components/Home/transform.ts",[],"/home/jake/proj/jake.cafe/portfolio2/externals.d.ts",["34"],"/home/jake/proj/jake.cafe/portfolio2/hooks/useMousePosition.ts",[],"/home/jake/proj/jake.cafe/portfolio2/hooks/useWindowDimensions.ts",[],"/home/jake/proj/jake.cafe/portfolio2/next.config.js",[],"/home/jake/proj/jake.cafe/portfolio2/pages/index.tsx",[],{"ruleId":"35","severity":1,"message":"36","line":2,"column":18,"nodeType":"37","messageId":"38","endLine":2,"endColumn":21,"suggestions":"39"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["40","41"],{"messageId":"42","fix":"43","desc":"44"},{"messageId":"45","fix":"46","desc":"47"},"suggestUnknown",{"range":"48","text":"49"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"48","text":"50"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[43,46],"unknown","never"]